# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main", "main_dev"]
  pull_request:
    branches: [ "main", "main_dev" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        presetPairs:
            - { configurePreset: Linux-GCC-x86_64, buildPreset: Linux-GCC-x86_64-Release_Dev }
            - { configurePreset: Linux-GCC-x86_64, buildPreset: Linux-GCC-x86_64-Release }
            - { configurePreset: Linux-Clang-x86_64, buildPreset: Linux-Clang-x86_64-Release_Dev }
            - { configurePreset: Linux-Clang-x86_64, buildPreset: Linux-Clang-x86_64-Release }
            - { configurePreset: Win-MSVC-x86_64, buildPreset: Win-MSVC-x86_64-Release_Dev }
            - { configurePreset: Win-MSVC-x86_64, buildPreset: Win-MSVC-x86_64-Release }
            - { configurePreset: Win-Clang-x86_64, buildPreset: Win-Clang-x86_64-Release_Dev }
            - { configurePreset: Win-Clang-x86_64, buildPreset: Win-Clang-x86_64-Release }
        exclude:
        - os: windows-latest
          presetPairs: { configurePreset: Linux-GCC-x86_64, buildPreset: Linux-GCC-x86_64-Release_Dev }
        - os: windows-latest
          presetPairs: { configurePreset: Linux-GCC-x86_64, buildPreset: Linux-GCC-x86_64-Release }
        - os: windows-latest
          presetPairs: { configurePreset: Linux-Clang-x86_64, buildPreset: Linux-Clang-x86_64-Release_Dev }
        - os: windows-latest
          presetPairs: { configurePreset: Linux-Clang-x86_64, buildPreset: Linux-Clang-x86_64-Release }
        - os: ubuntu-latest
          presetPairs: { configurePreset: Win-MSVC-x86_64, buildPreset: Win-MSVC-x86_64-Release_Dev }
        - os: ubuntu-latest
          presetPairs: { configurePreset: Win-MSVC-x86_64, buildPreset: Win-MSVC-x86_64-Release }
        - os: ubuntu-latest
          presetPairs: { configurePreset: Win-Clang-x86_64, buildPreset: Win-Clang-x86_64-Release_Dev }
        - os: ubuntu-latest
          presetPairs: { configurePreset: Win-Clang-x86_64, buildPreset: Win-Clang-x86_64-Release }

    steps:
    - uses: actions/checkout@v3
  
    - name: Install Ninja Multi-Config on Linux
      if: runner.os == 'Linux'
      run: >
        sudo apt-get update && sudo apt-get install ninja-build -y

    - name: Install Ninja Multi-Config on Windows
      if: runner.os == 'Windows'
      run: >
        choco install ninja

    - name: Configure CMake using Preset
      run: >
        cmake --preset ${{ matrix.presetPairs.configurePreset }}

    - name: Build using Preset
      run: >
        cmake --build --preset ${{ matrix.presetPairs.buildPreset }}

    - name: Built Tests
      run: >
        cmake --build --preset ${{ matrix.presetPairs.buildPreset }} --target run_all_unit_tests

    - name: Test
      run: >
        ctest --build-config ${{ matrix.presetPairs.buildPreset }}
